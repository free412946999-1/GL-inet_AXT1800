#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: BUILD GLINET AXT1800

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'

  push:
    paths:
      - '.github/workflows/build-glinet-axt1800.yml'
      - 'glinet-axt1800.yml'
    branches:
      - main

  schedule:
    - cron: 0 16 * * *

env:
  REPO_URL: https://github.com/gl-inet/gl-infra-builder
  REPO_BRANCH: main
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync time python3-setuptools python3-yaml ack bison ccache cmake cpio fastjar haveged help2man intltool libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncursesw5-dev libreadline-dev lrzsz mkisofs nano ninja-build pkgconf python3-pip scons squashfs-tools upx-ucl vim xxd -y
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        echo $PWD
        echo $GITHUB_WORKSPACE
        git clone $REPO_URL -b $REPO_BRANCH gl-infra-builder
        ln -sf /workdir/gl-infra-builder $GITHUB_WORKSPACE/gl-infra-builder
        cd $GITHUB_WORKSPACE
        [ -e glinet-axt1800.yml ] && mv glinet-axt1800.yml /workdir/gl-infra-builder/profiles

    - name: run setup.py
      run: |
        cd /workdir/gl-infra-builder
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@github.com"
        python3 setup.py -c configs/config-wlan-ap.yml

    - name: Download package
      id: package
      run: |
        cd /workdir/gl-infra-builder/wlan-ap/openwrt
        cp -r ~/work/GL-inet_AXT1800/GL-inet_AXT1800/default-settings/ ~/work/GL-inet_AXT1800/GL-inet_AXT1800/gl-infra-builder/feeds/default-settings/
        ./scripts/gen_config.py glinet-axt1800 glinet_depends default-settings

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
